[build-system]
build-backend = "setuptools.build_meta"

requires = [ "setuptools>=45", "wheel" ]

[project]
name = "albumentations"

version = "1.4.24"

description = "Fast, flexible, and advanced augmentation library for deep learning, computer vision, and medical imaging. Albumentations offers a wide range of transformations for both 2D (images, masks, bboxes, keypoints) and 3D (volumes, volumetric masks) data, with optimized performance and seamless integration into ML workflows."
readme = "README.md"
keywords = [
  "2D augmentation",
  "3D augmentation",
  "aerial photography",
  "anomaly detection",

  "artificial intelligence",

  "autonomous driving",
  "bounding boxes",
  # Core Computer Vision Tasks
  "classification",
  # Technical Domains
  "computer vision",
  "computer vision library",
  "data augmentation",

  "data preprocessing",
  "data science",
  "deep learning",
  "deep learning library",

  "depth estimation",
  "face recognition",
  # Performance & Features
  "fast augmentation",
  # Data Types & Processing
  "image augmentation",
  "image processing",
  "image transformation",
  # Data Structures
  "images",
  "instance segmentation",
  "keras",
  "keypoint detection",
  "keypoints",
  "machine learning",
  "machine learning tools",
  "masks",
  # Application Domains
  "medical imaging",
  "microscopy",
  "object counting",
  "object detection",
  "optimized performance",
  "panoptic segmentation",
  "pose estimation",
  # Development
  "python library",
  # ML Frameworks
  "pytorch",
  "quality inspection",

  "real-time processing",

  "robotics vision",
  "satellite imagery",
  "semantic segmentation",
  "tensorflow",
  "volumes",
  "volumetric data",
  "volumetric masks",

]
license = { file = "LICENSE" }

maintainers = [ { name = "Vladimir Iglovikov" } ]

authors = [ { name = "Vladimir Iglovikov" } ]
requires-python = ">=3.9"

classifiers = [
  # Development Status
  "Development Status :: 5 - Production/Stable",

  # Intended Audience
  "Intended Audience :: Developers",
  "Intended Audience :: Healthcare Industry",    # valid for medical applications
  "Intended Audience :: Information Technology",

  "Intended Audience :: Science/Research",
  # License
  "License :: OSI Approved :: MIT License",

  # Operating System
  "Operating System :: OS Independent",

  # Python Versions
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",

  "Programming Language :: Python :: 3.13",
  # Topics - Scientific
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Astronomy",
  "Topic :: Scientific/Engineering :: Atmospheric Science",

  "Topic :: Scientific/Engineering :: Bio-Informatics",
  "Topic :: Scientific/Engineering :: Image Processing",
  "Topic :: Scientific/Engineering :: Physics",
  "Topic :: Scientific/Engineering :: Visualization",
  # Topics - Software Development
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",

  # Typing
  "Typing :: Typed",
]

dynamic = [ "dependencies" ]
optional-dependencies.hub = [ "huggingface-hub" ]
optional-dependencies.pytorch = [ "torch" ]

optional-dependencies.text = [ "pillow" ]
urls.Homepage = "https://albumentations.ai"

[tool.setuptools]
packages = { find = { include = [
  "albumentations*",
], exclude = [
  "tests",
  "tools",
  "benchmark",
] } }

package-data = { albumentations = [ "*.txt", "*.md" ] }

[tool.setuptools.exclude-package-data]
"*" = [ "tests*", "tools*", "benchmark*", "conda.recipe*" ]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
target-version = "py39"

line-length = 120
indent-width = 4

# Assume Python 3.9
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "benchmark",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "setup.py",
  "site",
  "site-packages",
  "tests",
  "tools",
  "venv",
]

format.indent-style = "space"
# Like Black, respect magic trailing commas.
format.quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
format.line-ending = "auto"
format.skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
lint.select = [ "ALL" ]
lint.ignore = [
  "ANN001",
  "ANN204",
  "ANN401",
  "ARG001",
  "ARG002",
  "B008",
  "B027",
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D106",
  "D107",
  "D205",
  "D415",
  "EM101",
  "EM102",
  "F403",
  "FBT001",
  "FBT002",
  "FBT003",
  "G004",
  "PLR0911",
  "PLR0913",
  "PLR2004",
  "PTH123",
  "S311",
  "TC001",
  "TC002",
  "TC003",
  "TRY003",
]

# Allow fix for all enabled rules (when `--fix`) is provided.

lint.explicit-preview-rules = true
lint.fixable = [ "ALL" ]
lint.unfixable = [  ]
# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Like Black, use double quotes for strings.
lint.pydocstyle.convention = "google"

[tool.mypy]
plugins = [ "pydantic.mypy" ]

python_version = "3.9"
ignore_missing_imports = true
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = true

[tool.albumentations.maintainers]
emeritus = [
  "Alexander Buslaev",
  "Alex Parinov",
  "Eugene Khvedchenya",
  "Mikhail Druzhinin",
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
