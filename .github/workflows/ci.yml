name: CI
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'CONTRIBUTORS.md'

jobs:
  test_and_lint:
    name: Test and lint
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest, windows-latest, macos-13]
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12"]
      fail-fast: true
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Update pip
      run: python -m pip install --upgrade pip
    - name: Install wheel
      run: python -m pip install --upgrade wheel
    - name: Install PyTorch on Linux and Windows
      if: >
        matrix.operating-system == 'ubuntu-latest' ||
        matrix.operating-system == 'windows-latest'
      run: >
        pip install torch==2.2.0 torchvision==0.17.0
        --extra-index-url https://download.pytorch.org/whl/cpu
    - name: Install PyTorch on MacOS
      if: matrix.operating-system == 'macos-13'
      run: pip install torch==2.2.0 torchvision==0.17.0
    - name: Install dev requirements
      run: pip install -r requirements-dev.txt
    - name: Install dependencies
      run: |
        pip install .
    - name: Cleanup the build directory
      uses: JesseTG/rm@v1.0.3
      with:
        path: build
    - name: Run PyTest
      run: pytest --cov .
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.3.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: albumentations-team/albumentations

  check_code_formatting_types:
    name: Check code formatting with ruff and mypy
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.8"]
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Update pip
      run: python -m pip install --upgrade pip
    - name: Install dev requirements
      run: pip install -r requirements-dev.txt
    - name: Run checks
      run: pre-commit run --files $(find albumentations -type f)

  check_transforms_docs:
    name: Check Readme is not outdated
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install requirements
      run: |
        python -m pip install --upgrade pip
        pip install requests
        pip install .
    - name: Run checks for documentation
      run: python -m tools.make_transforms_docs check README.md
    - name: Run checks for used by documentation
      run: python -m tools.make_used_by_docs check
